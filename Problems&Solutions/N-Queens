public class Main {
    public static void main(String[] args) throws Exception {
        int n = 4;
        boolean[][] board = new boolean[n][n];
        Nqueens(board, 0);
    }

    private static void Nqueens(boolean[][] board, int row) {
        if(row == board.length){
            displayBoard(board);
            System.out.println();
            return;
        }

        for(int col = 0; col < board[row].length; col++){
            if(isSafe(board, row, col)){
                board[row][col] = true;
                Nqueens(board, row + 1);
                board[row][col] = false;
            }
        }
    }

    private static boolean isSafe(boolean[][] board, int row, int col) {
        for(int i = 0; i < row; i++){
            if(board[i][col]){
                return false;
            }
        }
        int maxLeft = Math.min(row, col);
        for(int l = 1; l <= maxLeft; l++){
            if(board[row - l][col - l]){
                return false;
            }
        }
        int maxRight = Math.min(row, board.length - col - 1);
        for(int r = 1; r <= maxRight; r++){
            if(board[row - r][col + r]){
                return false;
            }
        }
        return true;
    }

    private static void displayBoard(boolean[][] board) {
        for(int i = 0; i < board.length; i++){
            for(int j = 0; j < board[i].length; j++){
                if(!board[i][j]){
                    System.out.print('X' + " ");
                }
                else{
                    System.out.print('Q' + " ");
                }
            }
            System.out.println();
        }
    }
}
