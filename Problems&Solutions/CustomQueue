public class Main {

    public static void main(String[] args) throws Exception {
        CustomQ q = new CustomQ(5);
        q.insert(6);
        q.insert(10);
        q.insert(27);
        q.insert(99);
        q.remove();
        q.dislay();
    }
}
public class CustomQ {
    protected int[] data;
    final private static int DEF = 10;

    int size = 0;
    int front = 0;
    int end = 0;

    CustomQ(int size){
        this.data = new int[size];
    }
    CustomQ(){
        this(DEF);
    }

    public boolean insert(int value) throws Exception {
        if(isFull()){
            throw new Exception("Queue is FULL");
        }
        data[end++] = value;
        return true;
    }
    public int remove() throws Exception {
        if(isEmpty()){
            throw new Exception("Queue is Empty");
        }
        int rem = data[0];
        for(int i = 1; i < data.length; i++){
            data[i - 1] = data[i];
        }
        end -= 1;
        return rem;
    }
    public void displayFront() throws Exception {
        if(isEmpty()){
            throw new Exception("Queue is empty");
        }
        System.out.println(data[0]);
    }
    public void dislay(){
        for(int i = 0; i < end; i++){
            System.out.print(data[i] + " ");
        }
        System.out.println("END");
    }
    protected boolean isFull(){
        return end == data.length;
    }
    private boolean isEmpty(){
        return end == 0;
    }
}
