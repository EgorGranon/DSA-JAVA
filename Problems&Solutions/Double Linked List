public class Main {
    public static void main(String[] args) {
        DLL d = new DLL();
        d.insertFirst(34);
        d.insertFirst(12);
        d.insertFirst(1);
        d.insertLast(88);
        d.insertLast(100);
        d.insertLast(77);
        d.insertAfterValue(999, 1);
        d.printForwardAndReverse();
    }

}

public class DLL {
    private class Node{
        int data;
        Node next;
        Node prev;
        Node(int data){
            this.data = data;
        }
    }
    Node head;
    Node tail;
    public void insertFirst(int data){
        Node node = new Node(data);
        node.next = head;
        node.prev = null;
        if(head != null){
            head.prev = node;
        }
        if(head == null){
            tail = node;
        }
        head = node;
    }
    public void insertLast(int data){
        Node node = new Node(data);
        node.prev = tail;
        node.next = null;
        if(tail != null){
            tail.next = node;
        }
        if(tail == null){
            head = node;
        }
        tail = node;
    }
    public void printForwardAndReverse(){
        if(head == null){
            return;
        }
        Node temp = head;
        Node last = null;
        while(temp != null){
            System.out.print(temp.data + " --> ");
            last = temp;
            temp = temp.next;
        }
        System.out.println("NULL");
        while(last != null){
            System.out.print(last.data + " --> ");
            last = last.prev;
        }
        System.out.println("NULL");
    }

    public void insertAfterValue(int data, int value){
        Node temp = head;
        while(temp != null){
            if(temp.data == value){
                Node node = new Node(data);
                node.next = temp.next;
                temp.next.prev = node;
                temp.next = node;
                node.prev = temp;
                return;
            }
            temp = temp.next;
        }
        System.out.println("Value not Found");
    }

}
